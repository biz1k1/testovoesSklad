@rendermode InteractiveServer
@using Domain.Model.Models.Input.Platform
@using Model
@inject DialogService DialogService

<div class="buttonCreate">
    <EditForm Model="@updateWarehouseModel" OnSubmit="UpdatePlatform">

        <div>
            <RadzenLabel>Id склада</RadzenLabel>
            <InputNumber @bind-Value="updateWarehouseModel.updatePicketInput.PicketId" />
        </div>

        <div>
            <RadzenLabel></RadzenLabel>
            <InputNumber id="age" @bind-Value="updateWarehouseModel.updatePicketInput.PlatformId" />
        </div>

        <RadzenButton ButtonType="ButtonType.Submit">Сохранить</RadzenButton>
        <RadzenButton ButtonType="ButtonType.Button" Click="CloseDialog">Закрыть</RadzenButton>
    </EditForm>
</div>

@code{
    [SupplyParameterFromForm]
    public  UpdateWarehouseModel updateWarehouseModel { get; set; } = new();

    [Inject] private IHttpClientFactory HttpClientFactory { get; set; } = default!;
    private async Task UpdatePlatform()
    {
        var httpClient = HttpClientFactory.CreateClient();

        try
        {
            await httpClient.PostAsync("https://localhost:7294/Platform/platform", null);
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
    private void CloseDialog()
    {
        DialogService.Close();
    }

}
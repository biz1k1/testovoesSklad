@rendermode InteractiveServer
@using Domain.Model.Models.Output
@inherits LayoutComponentBase
@using Model;
@using Web.Components.Pages.Input.Dialog.Edit
@using Web.Components.Pages.Input.Button.Edit
@using Web.Services
@inject PlatformService PlatformService
@inject FlattenTreeService FlattenTreeService

@page "/PlatformTable"
<div class="page">
    <main>
        <div class="TableStyle">
            <div class="table-sizes">
                <RadzenDataGrid Data="@tableRow" ColumnWidth="100px" AllowSorting="true"
                                AllowPaging="true" PageSize="5" SelectionMode="DataGridSelectionMode.Single
                            "AllowColumnResize="true" GridLines="DataGridGridLines.Both">
                    <Columns>

                        <RadzenDataGridColumn Property="@nameof(TableRowPlatform.PlatformNumber)" Title="Номер площадки" Width="80px" TextAlign="TextAlign.Center" />

                        <RadzenDataGridColumn Property="@nameof(TableRowPlatform.Date)" Title="Дата объединения площадки" Width="80px" TextAlign="TextAlign.Center" />

                        <RadzenDataGridColumn Property="@nameof(TableRowPlatform.PlatformCargo)" Title="Груз на площадке(т)" Width="80px" TextAlign="TextAlign.Center" />



                    </Columns>

                </RadzenDataGrid>
            </div>
        </div>
        <MergePlatformButton Platforms="platforms"/>
    </main>
</div>
@code {

    private IEnumerable<PlatformOutput>? platforms;

    public List<TableRowPlatform> tableRow { get; set; }

    protected override async Task OnInitializedAsync()
    {
        platforms = await PlatformService.GetPlatformAsync();
        tableRow = FlattenTreeService.FlattenTreePlatform(platforms);
    }
}

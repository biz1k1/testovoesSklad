@rendermode InteractiveAuto
@using Domain.Model.Models.Input
@using Domain.Model.Models.Output
@using Model
@using System.Text.Json
@using System.Text
@inject DialogService DialogService

<main>

    <div>
        <EditForm FormName="Добавление платформы" Model="@platformModel" OnSubmit="UpdatePlatform">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>Выберите склад, который привяжется к площадке:</label>
                <RadzenDropDown @bind-Value="platformModel.WarehouseName" Data="Warehouses.Select(x=>x.Name)" Style="width: 100%;" />

                <RadzenText  TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Груз на площадке(т)</RadzenText>
                <RadzenNumeric @bind-Value="platformModel.Cargo" aria-label="Default TextBox" />

            </div>

            <RadzenButton class="button-form-save" ButtonType="ButtonType.Submit">Сохранить</RadzenButton>
            <RadzenButton class="button-form-cancel" ButtonType="ButtonType.Button" Click="CloseDialog">Закрыть</RadzenButton>
        </EditForm>
    </div>
</main>

@code {
    [Parameter]
    public IEnumerable<WarehouseOutput>? Warehouses { get; set; }
    private CreatePlatformModel platformModel=new();


    [Inject] private IHttpClientFactory HttpClientFactory { get; set; } = default!;

    private async Task UpdatePlatform()
    {
        var httpClient = HttpClientFactory.CreateClient();

        var warehouse = Warehouses.Where(x=>x.Name==platformModel.WarehouseName).FirstOrDefault();

        using StringContent jsonContent = new(
        JsonSerializer.Serialize(new AddPlatformInput
        {
                WarehouseId = warehouse.Id,
                Cargo = platformModel.Cargo
        }),
        Encoding.UTF8,
        "application/json");

        try
        {

            await httpClient.PostAsync("https://localhost:7294/Platform/platform", jsonContent);
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
    private void CloseDialog()
    {
        DialogService.Close();
    }

}